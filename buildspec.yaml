# Build specifications for AWS CodeBuild
#   See: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
#
# This file is used by AWS CodeBuild to build the React application and place it into
# an S3 bucket used by an AWS CloudFront Distribution.
#
# It expects the React app to be built with Node Package Manager (NPM). If we decide to use
# a different JS package manager, we will need to update the `pre_build` and `build` steps below.
#
# The S3_BUCKET and CLOUDFRONT_DISTRO_ID environment variables are set by AWS CodePipeline within
# the AWS environment. This file is not meant to be run outside that context.
version: 0.2

phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
      nodejs: 16
  pre_build:
    commands:
      - echo 'Installing source NPM dependencies...' 2>&1 | tee -a build.log
      - npm install 2>&1 | tee -a build.log
  build:
    commands:
      - echo "Build started on 'date'" 2>&1 | tee -a build.log
      - npm run build 2>&1 | tee -a build.log
  post_build:
    commands:
      # Upload the files to CloudFront's S3 bucket
      - echo 'Deploying assets to CloudFront...' 2>&1 | tee -a build.log
      # --acl public-read
      - aws s3 cp --recursive ./build s3://$S3_BUCKET/ | tee -a build.log
      - aws s3 cp --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://$S3_BUCKET/
      # Invalidate the CloudFront cache so that it serves the updated assets
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRO_ID --paths /index.html --region us-east-1

      # Send the results of the build to the CodeBuild email address
      - aws sns publish --topic-arn $SNS_EMAIL_TOPIC --message file://build.log --region $AWS_REGION
artifacts:
  files:
    - "build/*"
    - "build/**/*"
